{"version":3,"file":"static/js/884.50acc56d.chunk.js","mappings":"sMAkDA,UA9CqB,WAAO,IAAD,IAChBA,GAAMC,EAAAA,EAAAA,MAAND,GACP,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAchD,OAZAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GAAkBZ,GACba,MAAK,SAACC,GAAD,OAAcA,EAASC,MAAvB,IACLF,MAAK,SAACG,GACHZ,EAASY,EACZ,IACAC,OAAM,SAACC,GAAD,OACHC,QAAQC,IAAIF,EADT,GAId,GAAC,KAGE,2BACgB,KAAVf,IACE,iCACI,wBAAG,SAAC,KAAD,CAAMkB,GAAId,EAASe,QAAnB,wBACH,gBAAKC,IAAG,0CAAqCpB,EAAMqB,aAAeC,IAAKtB,EAAMuB,kBAC7E,wBAAKvB,EAAMuB,kBACX,mCAAWvB,EAAMwB,iBACjB,qCACA,uBAAIxB,EAAMyB,YACV,mCACA,uBAAIzB,EAAM0B,OAAOC,KAAI,SAACC,GAAW,OAAOA,EAAMC,KAAK,GAAI,OACvD,sDAER,2BACI,yBACI,SAAC,KAAD,CAAMX,GAAG,OAAT,qBAEJ,yBACI,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGR,SAAC,EAAAY,SAAD,CAAUC,UAAU,wCAApB,UACI,SAAC,KAAD,QAGf,C,uJChDD,IAAMC,EAAS,gCACTC,EAAM,mCAECC,EAAkB,WAC3B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,sCAA0CC,GACzD,EAEYG,EAAgB,SAACvC,GAC1B,OAAOsC,MAAM,GAAD,OAAIH,EAAJ,iBAAqBnC,EAArB,oBAAmCoC,GAClD,EAEYI,EAAoB,SAACxC,GAC9B,OAAOsC,MAAM,GAAD,OAAIH,EAAJ,iBAAqBnC,EAArB,4BAA2CoC,GAC1D,EAEYK,EAAuB,SAACzC,GACjC,OAAOsC,MAAM,GAAD,OAAIH,EAAJ,iBAAqBnC,EAArB,4BAA2CoC,GAC1D,EAEYM,EAAoB,SAACC,GAC9B,OAAOL,MAAM,GAAD,OAAIH,EAAJ,gCAAoCC,EAApC,kBAAiDO,GAChE,C","sources":["pages/MovieDetails.jsx","serviсes/api.jsx"],"sourcesContent":["import { useState, useEffect, useRef, Suspense } from \"react\";\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\"\nimport * as API from \"../serviсes/api\";\n\nconst MovieDetails = () => { \n    const {id} = useParams();\n    const [movie, setMovie] = useState('');\n    const location = useLocation();\n    const backLink = useRef(location.state?.from ?? '/movies')\n\n    useEffect(() => {\n        API.findMovieById(id)\n            .then((response) => response.json())\n            .then((res) => {\n                setMovie(res)\n            })\n            .catch((error)=>\n                console.log(error)\n        )\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n\n    return (\n        <div>\n            {(movie !== '') && (\n                <>\n                    <p><Link to={backLink.current}>Go back</Link></p>\n                    <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={movie.original_title} />\n                    <h2>{movie.original_title}</h2>\n                    <p>Score: {movie.vote_average}</p>\n                    <p>Overview</p>\n                    <p>{movie.overview}</p>\n                    <p>Genres</p>\n                    <p>{movie.genres.map((genre) => {return genre.name+' '})}</p>\n                    <p>Additional information</p>\n                </>)}\n            <ul>\n                <li>\n                    <Link to=\"cast\">Cast</Link>\n                </li>\n                <li>\n                    <Link to=\"reviews\">Reviews</Link>\n                </li>\n            </ul>\n            <Suspense fallback={<div>Loading...</div>}>\n                <Outlet />\n            </Suspense>\n        </div>)\n}\n\nexport default MovieDetails","const BASE_URL='https://api.themoviedb.org/3/'\nconst KEY = '81b825b8414e187e449b2c712f701899';\n\nexport const findPopularMovies=() => { \n    return fetch(`${BASE_URL}trending/movie/day?api_key=${KEY}`)\n}\n\nexport const findMovieById = (id) => { \n    return fetch(`${BASE_URL}movie/${id}?api_key=${KEY}`)\n}\n\nexport const findCastMovieById = (id) => { \n    return fetch(`${BASE_URL}movie/${id}/credits?api_key=${KEY}`)\n}\n\nexport const findReviewsMovieById = (id) => { \n    return fetch(`${BASE_URL}movie/${id}/reviews?api_key=${KEY}`)\n}\n\nexport const findMovieBySearch = (text) => { \n    return fetch(`${BASE_URL}search/movie?api_key=${KEY}&query=${text}`)\n}"],"names":["id","useParams","useState","movie","setMovie","location","useLocation","backLink","useRef","state","from","useEffect","API","then","response","json","res","catch","error","console","log","to","current","src","poster_path","alt","original_title","vote_average","overview","genres","map","genre","name","Suspense","fallback","BASE_URL","KEY","findPopularMovies","fetch","findMovieById","findCastMovieById","findReviewsMovieById","findMovieBySearch","text"],"sourceRoot":""}